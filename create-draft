#!/bin/bash
usage(){
	fmt <<EOF
DESCRIPTION
	Create a skeleton of a new Standard Ebooks ebook.

USAGE
	create-ebook [-e,--email=EMAIL] [-g,--github] [-f,--force] -a,--author=AUTHOR -t,--title=TITLE [-r,--translator=TRANSLATOR] [-i,--illustrator=ILLUSTRATOR]
		Create a new ebook skeleton in ../drafts/AUTHOR/TITLE/

		If --email is specified, initialize the Git repository using that email address as the main committer.

		With --github, initialize a new Github repository for this ebook.  You must be a member of the standardebooks Github organization.

		With --force, don't ask to overwrite an existing draft directory.
EOF
	exit
}
die(){ printf "Error: ${1}\n" 1>&2; exit 1; }
if [ $# -eq 1 ]; then if [ "$1" = "--help" -o "$1" = "-h" ]; then usage; fi fi
#End boilerplate

customEmail=""
author=""
title=""
translator=""
illustrator=""
initializeGithub=false
force=false
scriptDir="$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
makeUrlSafePath="${scriptDir}/make-url-safe"

for i in "$@"
do
case $i in
	-e=*|--email=*)
		customEmail=$(echo "${i}" | sed 's/[-a-zA-Z0-9]*=//')
		shift
	;;
	-g|--github)
		initializeGithub=true
		shift
	;;
	-f|--force)
		force=true
		shift
	;;
	-a=*|--author=*)
		author=$(echo "${i}" | sed 's/[-a-zA-Z0-9]*=//')
		shift
	;;
	-t=*|--title=*)
		title=$(echo "${i}" | sed 's/[-a-zA-Z0-9]*=//')
		shift
	;;
	-r=*|--translator=*)
		translator=$(echo "${i}" | sed 's/[-a-zA-Z0-9]*=//')
		shift
	;;
	-i=*|--illustrator=*)
		illustrator=$(echo "${i}" | sed 's/[-a-zA-Z0-9]*=//')
		shift
	;;
esac
done

if [ "${author}" = "" ]; then
	die "Author is required."
fi

if [ "${title}" = "" ]; then
	die "Title is required."
fi

scriptDir="$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

urlAuthor=$("${makeUrlSafePath}" "${author}")
urlTitle=$("${makeUrlSafePath}" "${title}")
urlTranslator=$("${makeUrlSafePath}" "${translator}")
urlIllustrator=$("${makeUrlSafePath}" "${illustrator}")

root="${urlAuthor}/${urlTitle}"

if [ -d "${root}" ]; then
	if [ "${force}" != true ]; then
		while true; do
		    read -p "./${root}/ already exists.  Overwrite? " yn
		    case $yn in
		        [Yy]* )
					force=true
					break
				;;
		        * )
					exit
				;;
		    esac
		done
	fi
	if [ "${force}" = true ]; the
		rm -rf "${root}"
	fi
fi

mkdir -p "${root}/images"
mkdir -p "${root}/dist"
mkdir -p "${root}/src/epub/css"
mkdir -p "${root}/src/epub/images"
mkdir -p "${root}/src/epub/text"

cp -r "${scriptDir}/templates/META-INF/" "${root}/src/"
cp "${scriptDir}/templates/mimetype" "${root}/src/"
cp "${scriptDir}/templates/onix.xml" "${root}/src/epub/"
cp "${scriptDir}/templates/toc.xhtml" "${root}/src/epub/"
cp "${scriptDir}/templates/core.css" "${root}/src/epub/css/"
cp "${scriptDir}/templates/logo.svg" "${root}/src/epub/images/"
cp "${scriptDir}/templates/unlicense.xhtml" "${root}/src/epub/text/"

cp "${scriptDir}/templates/titlepage.svg" "${root}/images/"
cp "${scriptDir}/templates/local.css"  "${root}/src/epub/css/"
cp "${scriptDir}/templates/colophon.xhtml"  "${root}/src/epub/text/"
cp "${scriptDir}/templates/titlepage.xhtml"  "${root}/src/epub/text/"
cp "${scriptDir}/templates/content.opf"  "${root}/src/epub/"

if [ ${#title} -lt 15 ]; then
	cp "${scriptDir}/templates/cover-short.svg" "${root}/images/cover.svg"
else
	cp "${scriptDir}/templates/cover.svg" "${root}/images/cover.svg"
fi

identifier="${urlAuthor}/${urlTitle}"
if [ "${urlTranslator}" != "" ]; then
	identifier="${identifier}/${urlTranslator}"
fi
if [ "${urlIllustrator}" != "" ]; then
	identifier="${identifier}/${urlIllustrator}"
fi

repoName=$(echo "${identifier}" | sed "s|/|_|g")

sed --in-place "s|TITLE|${title}|g" "${root}/src/epub/text/titlepage.xhtml"
sed --in-place "s|AUTHOR|${author}|g" "${root}/src/epub/text/titlepage.xhtml"
sed --in-place "s|SEIDENTIFIER|${identifier}|g" "${root}/src/epub/content.opf"
sed --in-place "s|AUTHOR|${author}|g" "${root}/src/epub/content.opf"
sed --in-place "s|TITLE|${title}|g" "${root}/src/epub/content.opf"
sed --in-place "s|VCSIDENTIFIER|${repoName}|" "${root}/src/epub/content.opf"
sed --in-place "s|SEIDENTIFIER|${identifier}|g" "${root}/src/epub/text/colophon.xhtml"
sed --in-place "s|TITLE|${title}|g" "${root}/src/epub/text/colophon.xhtml"
sed --in-place "s|AUTHOR|${author}|g" "${root}/src/epub/text/colophon.xhtml"

git init --quiet "${root}"
printf "dist/*\n" > "${root}/.gitignore"
cp "${scriptDir}/pre-commit"  "${root}/.git/hooks/"

if [ "${customEmail}" != "" ]; then
	cd "${root}"
	git config user.email "${customEmail}"
fi

#Create github repo
if [ "${initializeGithub}" = true ]; then
	echo "Enter your Github username:"
	read githubUsername

	output=$(curl -s -i -u "${githubUsername}" https://api.github.com/orgs/standardebooks/repos -d "{\"name\":\"${repoName}\"}")

	echo "${output}" | grep -q -i "201 OK"
	if [ $? -ne 0 ]; then
		cd "${root}"
		git remote add github git@github.com:"standardebooks/${repoName}.git"
	else
		echo "Error during Github request:" 1>&2
		die "${output}"
	fi
fi
