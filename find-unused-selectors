#!/usr/bin/env python3

import argparse
import re
import glob
import lxml.cssselect
import subprocess
import sys
import os

def main():
	parser = argparse.ArgumentParser(description="Find unused local.css CSS selectors in Standard Ebook source directories.")
	parser.add_argument("-v", "--verbose", help="Increase output verbosity", action="store_true")
	parser.add_argument('directories', metavar='DIRECTORY', nargs='+', help='A Standard Ebooks source directory')
	args = parser.parse_args()

	#First test if we're looking at a Standard Ebooks source directory
	for dir in args.directories:
		dir = os.path.abspath(dir)
		sourceDir = os.path.join(dir, "src/")
		if not os.path.isdir(sourceDir):
			print(dir + " doesn't look like a Standard Ebook source directory.", file=sys.stderr)
			exit(1)

	#Check!
	for dir in args.directories:
		dir = os.path.abspath(dir)
		sourceDir = os.path.join(dir, "src/")

		if args.verbose:
			print("Checking " + dir + " ...", end="", flush=True)

		with open(os.path.join(sourceDir, "epub/css/local.css"), encoding="utf-8") as file:
			css = file.read()

		#Remove actual content of css selectors
		css = re.sub("{[^}]+}", "", css, flags=re.MULTILINE)

		#Remove trailing commas
		css = re.sub(",", "", css)

		#Remove comments
		css = re.sub("\/\*.+?\*\/", "", css, flags=re.DOTALL)

		#Remove @ defines
		css = re.sub("^@.+", "", css, flags=re.MULTILINE)

		#Construct a dictionary of selectors
		selectors = list(filter(None, css.splitlines()))
		unusedSelectors = list(selectors)

		#Get a list of .xhtml files to search
		filenames = glob.glob(os.path.join(sourceDir, "epub/text/") + "*.xhtml")

		#Now iterate over each CSS selector and see if it's used in any of the files we found
		for selector in selectors:
			try:
				xpath = lxml.cssselect.CSSSelector(selector, translator="xhtml", namespaces={"epub": "http://www.idpf.org/2007/ops"})
			except lxml.cssselect.ExpressionError:
				#This gets thrown if we use pseudo-elements, which lxml doesn't support
				pass

			for filename in filenames:
				if not filename.endswith("colophon.xhtml") and not filename.endswith("titlepage.xhtml") and not filename.endswith("halftitle.xhtml"):
					#We have to use a call to xpath here because the lxml library doesn't select *[epub|type~=""] type selectors
					output = subprocess.check_output(["xpath", "-q", "-e", xpath.path, filename], stderr=subprocess.DEVNULL)

					if output != b"":
						unusedSelectors.remove(selector)
						break

		#Did we find any unused selectors?
		if len(unusedSelectors) > 0:
			if args.verbose:
				print("")
			else:
				print(dir)

			for selector in unusedSelectors:
				print("\t" + selector)
		elif args.verbose:
			print(" OK")

if __name__ == "__main__":
	main()
